View(agg_data)
agg_data <- data2[, lapply(.SD, sum), by=name,
.SDcols=c("score", "opp_score", "called",
"weeuchred", "wegoteuchred", "igoteuchred",
"lonertry", "lonerwin")]
View(agg_data)
---
title: "East Van Euchre Club Analytics (December 3, 2017) - TESTING"
output:
html_document:
self_contained: no
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r load, echo=FALSE}
# Load and aggregate data
library(data.table)
library(ggplot2)
library(ggthemes)
library(ggrepel)
library(DT) # Sortable table
rm(list=ls())
# Load data
setwd("~/github/eastvaneuchre-analytics.github.io/")
raw_data <- fread("Euchre Analytics December 3rd @ Anza - MASTER DATA.csv")
# Rename variables to be lowercase, unspace
score.vars.old <- grep("Score: Hand [0-9]+", names(raw_data), value=T)
score.vars <- gsub("Score: Hand ([0-9]+)?", "score_\\1", score.vars.old)
call.vars.old <- grep("Called: Hand [0-9]+", names(raw_data), value=T)
call.vars <- gsub("Called: Hand ([0-9]+)?", "call_\\1", call.vars.old)
setnames(raw_data,
c("Name", "Partner", "Opponent 1", "Opponent 2", "Round", call.vars.old, score.vars.old),
c("name", "partner", "opp1", "opp2", "round", call.vars, score.vars))
raw_data2 <- raw_data[, c("name", "partner", "opp1", "opp2", "round", call.vars, score.vars), with=F] # Drop other cols
# Convert to long. Each row is a person-round-hand
data <- melt(raw_data2, id.vars=c("name", "partner", "opp1", "opp2", "round"),
measure.vars=patterns("call_", "score_"), variable.name="hand", value.name=c("call", "score"))
# Merge in opponent scores
data[opp1=="Nat", opp1:="Natalie"] # Fix name inconsistency
data2 <- merge(data, data[, list(opp1=name, round, hand, opp_score=score)],
by=c("opp1", "round", "hand"))
data2[,`:=`(called=call=="v" | call=="x", lonertry=call=="x", call=NULL)]
# Compute by-hand statistics
data2[, `:=`(weeuchred = score==2 & called==FALSE,
wegoteuchred = opp_score == 2,
igoteuchred = opp_score == 2 & called == TRUE,
lonerwin = score == 4)]
# Aggregate by person
agg_data <- data2[, lapply(.SD, sum), by=name,
.SDcols=c("score", "opp_score", "called",
"weeuchred", "wegoteuchred", "igoteuchred",
"lonertry", "lonerwin")]
```
View(agg_data)
agg.labs <- c("Points for", "Points against", "Calls", "We euchred", "We got euchred", "I got euchred", "Loner tries", "Loner wins")
setorder(agg_data, name)
agg.labs <- c("Points for", "Points against", "Calls", "We euchred", "We got euchred", "I got euchred", "Loner tries", "Loner wins")
setorder(agg_data, name)
datatable(agg_data,
rownames=FALSE,
colnames=c("Name", agg.labs),
options=list(pageLength=nrow(agg_data)))
---
title: "East Van Euchre Club Analytics (December 3, 2017) - TESTING"
output:
html_document:
self_contained: no
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r load, echo=FALSE}
# Load and aggregate data
library(data.table)
library(ggplot2)
library(ggthemes)
library(ggrepel)
library(DT) # Sortable table
rm(list=ls())
# Load data
setwd("~/github/eastvaneuchre-analytics.github.io/")
raw_data <- fread("Euchre Analytics December 3rd @ Anza - MASTER DATA.csv")
# Rename variables to be lowercase, unspace
score.vars.old <- grep("Score: Hand [0-9]+", names(raw_data), value=T)
score.vars <- gsub("Score: Hand ([0-9]+)?", "score_\\1", score.vars.old)
call.vars.old <- grep("Called: Hand [0-9]+", names(raw_data), value=T)
call.vars <- gsub("Called: Hand ([0-9]+)?", "call_\\1", call.vars.old)
setnames(raw_data,
c("Name", "Partner", "Opponent 1", "Opponent 2", "Round", call.vars.old, score.vars.old),
c("name", "partner", "opp1", "opp2", "round", call.vars, score.vars))
raw_data2 <- raw_data[, c("name", "partner", "opp1", "opp2", "round", call.vars, score.vars), with=F] # Drop other cols
# Convert to long. Each row is a person-round-hand
data <- melt(raw_data2, id.vars=c("name", "partner", "opp1", "opp2", "round"),
measure.vars=patterns("call_", "score_"), variable.name="hand", value.name=c("call", "score"))
data[,`:=`(called=call=="v" | call=="x", lonertry=call=="x", call=NULL)] # Split out calls and loner calls
# Merge in opponent scores
data[opp1=="Nat", opp1:="Natalie"] # Fix name inconsistency
data2 <- merge(data, data[, list(opp1=name, round, hand, opp_score=score, opp_called=called)],
by=c("opp1", "round", "hand"))
# Compute by-hand statistics
data2[, `:=`(weeuchred = score==2 & called==FALSE,
wegoteuchred = opp_score == 2 & opp_called==FALSE,
igoteuchred = opp_score == 2 & called == TRUE,
lonerwin = score == 4)]
# Aggregate by person
agg_data <- data2[, lapply(.SD, sum), by=name,
.SDcols=c("score", "opp_score", "called",
"weeuchred", "wegoteuchred", "igoteuchred",
"lonertry", "lonerwin")]
View(agg_data)
View(data2)
View(agg_data)
View(data2)
---
title: "East Van Euchre Club Analytics (December 3, 2017) - TESTING"
output:
html_document:
self_contained: no
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r load, echo=FALSE}
# Load and aggregate data
library(data.table)
library(ggplot2)
library(ggthemes)
library(ggrepel)
library(DT) # Sortable table
rm(list=ls())
# Load data
setwd("~/github/eastvaneuchre-analytics.github.io/")
raw_data <- fread("Euchre Analytics December 3rd @ Anza - MASTER DATA.csv")
# Rename variables to be lowercase, unspace
score.vars.old <- grep("Score: Hand [0-9]+", names(raw_data), value=T)
score.vars <- gsub("Score: Hand ([0-9]+)?", "score_\\1", score.vars.old)
call.vars.old <- grep("Called: Hand [0-9]+", names(raw_data), value=T)
call.vars <- gsub("Called: Hand ([0-9]+)?", "call_\\1", call.vars.old)
setnames(raw_data,
c("Name", "Partner", "Opponent 1", "Opponent 2", "Round", call.vars.old, score.vars.old),
c("name", "partner", "opp1", "opp2", "round", call.vars, score.vars))
raw_data2 <- raw_data[, c("name", "partner", "opp1", "opp2", "round", call.vars, score.vars), with=F] # Drop other cols
# Convert to long. Each row is a person-round-hand
data <- melt(raw_data2, id.vars=c("name", "partner", "opp1", "opp2", "round"),
measure.vars=patterns("call_", "score_"), variable.name="hand", value.name=c("call", "score"))
data[,`:=`(called=call=="v" | call=="x", lonertry=call=="x", call=NULL)] # Split out calls and loner calls
# Merge in opponent scores
data[opp1=="Nat", opp1:="Natalie"] # Fix name inconsistency
data2 <- merge(data, data[, list(opp1=name, round, hand, opp_score=score, opp_called=called)],
by=c("opp1", "round", "hand"))
# Compute by-hand statistics
data2[, `:=`(weeuchred = score==2 & called==FALSE,
wegoteuchred = opp_score == 2 & opp_called==FALSE,
igoteuchred = opp_score == 2 & called == TRUE,
lonerwin = score == 4)]
# Aggregate by person
agg_data <- data2[, lapply(.SD, sum), by=name,
.SDcols=c("score", "opp_score", "called",
"weeuchred", "wegoteuchred", "igoteuchred",
"lonertry", "lonerwin")]
```
### Per-person statistics
```{r analysis1, echo=FALSE}
# Export agg_data tabulation
agg.labs <- c("Points for", "Points against", "Calls", "We euchred", "We got euchred", "I got euchred", "Loner tries", "Loner wins")
setorder(agg_data, name)
datatable(agg_data,
rownames=FALSE,
colnames=c("Name", agg.labs),
options=list(pageLength=nrow(agg_data)))
```
```{r weirdbug, echo=FALSE}
rm(.Random.seed) # Fixes a very weird bug related to datatable
set.seed(1)
```
### Distributions
```{r analysis2, echo=FALSE}
agg_data_long <- melt(agg_data, id="name")
agg_data_long[, variable:=factor(variable, # Generate nice labels
levels=agg.vars,
labels=agg.labs)]
ggplot(agg_data_long, aes(x=value)) + geom_histogram(bins=6) +
facet_wrap(~variable, ncol=2, scales="free_x") +
labs(x=NULL, y=NULL)
```
### Relationship between times called and total score
```{r analysis3, echo=FALSE}
ggplot(agg_data, aes(y=total_score)) +
geom_label_repel(aes(x=times_called, label=name)) +
geom_smooth(method=lm, aes(x=times_called)) +
labs(x="Times called", y="Total score")
```
View(data2)
View(data2)
data[opp1=="Nat", opp1:="Natalie"] # Fix name inconsistency
data2 <- merge(data, data[, list(opp1=name, round, hand, opp_score=score, opp1_called=called)],
by=c("opp1", "round", "hand"))
data3 <- merge(data2, data2[, list(opp2=name, round, hand, opp2_called=called)],
by=c("opp1", "round", "hand"))
# Merge in opponent scores and calls
data[opp1=="Nat", opp1:="Natalie"] # Fix name inconsistency
data2 <- merge(data, data[, list(opp1=name, round, hand, opp_score=score, opp1_called=called)],
by=c("opp1", "round", "hand"))
data3 <- merge(data2, data2[, list(opp2=name, round, hand, opp2_called=called)],
by=c("opp2", "round", "hand"))
data[opp2=="Nat", opp2:="Natalie"] # Fix name inconsistency
data2 <- merge(data, data[, list(opp1=name, round, hand, opp_score=score, opp1_called=called)],
by=c("opp1", "round", "hand"))
data3 <- merge(data2, data2[, list(opp2=name, round, hand, opp2_called=called)],
by=c("opp2", "round", "hand"))
data[opp1=="Nat", opp1:="Natalie"] # Fix name inconsistency
data[opp2=="Nat", opp2:="Natalie"]
data2 <- merge(data, data[, list(opp1=name, round, hand, opp_score=score, opp1_called=called)],
by=c("opp1", "round", "hand"))
data3 <- merge(data2, data2[, list(opp2=name, round, hand, opp2_called=called)],
by=c("opp2", "round", "hand"))
data3[, opp_called:=opp1_called == TRUE | opp1_called==TRUE]
---
title: "East Van Euchre Club Analytics (December 3, 2017) - TESTING"
output:
html_document:
self_contained: no
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r load, echo=FALSE}
# Load and aggregate data
library(data.table)
library(ggplot2)
library(ggthemes)
library(ggrepel)
library(DT) # Sortable table
rm(list=ls())
# Load data
setwd("~/github/eastvaneuchre-analytics.github.io/")
raw_data <- fread("Euchre Analytics December 3rd @ Anza - MASTER DATA.csv")
# Rename variables to be lowercase, unspace
score.vars.old <- grep("Score: Hand [0-9]+", names(raw_data), value=T)
score.vars <- gsub("Score: Hand ([0-9]+)?", "score_\\1", score.vars.old)
call.vars.old <- grep("Called: Hand [0-9]+", names(raw_data), value=T)
call.vars <- gsub("Called: Hand ([0-9]+)?", "call_\\1", call.vars.old)
setnames(raw_data,
c("Name", "Partner", "Opponent 1", "Opponent 2", "Round", call.vars.old, score.vars.old),
c("name", "partner", "opp1", "opp2", "round", call.vars, score.vars))
raw_data2 <- raw_data[, c("name", "partner", "opp1", "opp2", "round", call.vars, score.vars), with=F] # Drop other cols
# Convert to long. Each row is a person-round-hand
data <- melt(raw_data2, id.vars=c("name", "partner", "opp1", "opp2", "round"),
measure.vars=patterns("call_", "score_"), variable.name="hand", value.name=c("call", "score"))
data[,`:=`(called=call=="v" | call=="x", lonertry=call=="x", call=NULL)] # Split out calls and loner calls
# Merge in opponent scores and calls
data[opp1=="Nat", opp1:="Natalie"] # Fix name inconsistency
data[opp2=="Nat", opp2:="Natalie"]
data2 <- merge(data, data[, list(opp1=name, round, hand, opp_score=score, opp1_called=called)],
by=c("opp1", "round", "hand"))
data3 <- merge(data2, data2[, list(opp2=name, round, hand, opp2_called=called)],
by=c("opp2", "round", "hand"))
data3[, opp_called:=opp1_called == TRUE | opp1_called==TRUE]
# Compute by-hand statistics
data3[, `:=`(weeuchred = score==2 & called==FALSE,
wegoteuchred = opp_score == 2 & opp_called==FALSE,
igoteuchred = opp_score == 2 & called == TRUE,
lonerwin = score == 4)]
# Aggregate by person
agg_data <- data3[, lapply(.SD, sum), by=name,
.SDcols=c("score", "opp_score", "called",
"weeuchred", "wegoteuchred", "igoteuchred",
"lonertry", "lonerwin")]
```
### Per-person statistics
```{r analysis1, echo=FALSE}
# Export agg_data tabulation
agg.labs <- c("Points for", "Points against", "Calls", "We euchred", "We got euchred", "I got euchred", "Loner tries", "Loner wins")
setorder(agg_data, name)
datatable(agg_data,
rownames=FALSE,
colnames=c("Name", agg.labs),
options=list(pageLength=nrow(agg_data)))
```
```{r weirdbug, echo=FALSE}
rm(.Random.seed) # Fixes a very weird bug related to datatable
set.seed(1)
```
### Distributions
```{r analysis2, echo=FALSE}
agg_data_long <- melt(agg_data, id="name")
agg_data_long[, variable:=factor(variable, # Generate nice labels
levels=agg.vars,
labels=agg.labs)]
ggplot(agg_data_long, aes(x=value)) + geom_histogram(bins=6) +
facet_wrap(~variable, ncol=2, scales="free_x") +
labs(x=NULL, y=NULL)
```
### Relationship between times called and total score
```{r analysis3, echo=FALSE}
ggplot(agg_data, aes(y=total_score)) +
geom_label_repel(aes(x=times_called, label=name)) +
geom_smooth(method=lm, aes(x=times_called)) +
labs(x="Times called", y="Total score")
```
View(agg_data)
agg_data <- data3[, lapply(.SD, sum), by=name,
.SDcols=c("score", "opp_score", "called",
"weeuchred", "wegoteuchred", "igoteuchred",
"lonertry", "lonerwin")]
View(agg_data)
---
title: "East Van Euchre Club Analytics (December 3, 2017) - TESTING"
output:
html_document:
self_contained: no
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r load, echo=FALSE}
# Load and aggregate data
library(data.table)
library(ggplot2)
library(ggthemes)
library(ggrepel)
library(DT) # Sortable table
rm(list=ls())
# Load data
setwd("~/github/eastvaneuchre-analytics.github.io/")
raw_data <- fread("Euchre Analytics December 3rd @ Anza - MASTER DATA.csv")
# Rename variables to be lowercase, unspace
score.vars.old <- grep("Score: Hand [0-9]+", names(raw_data), value=T)
score.vars <- gsub("Score: Hand ([0-9]+)?", "score_\\1", score.vars.old)
call.vars.old <- grep("Called: Hand [0-9]+", names(raw_data), value=T)
call.vars <- gsub("Called: Hand ([0-9]+)?", "call_\\1", call.vars.old)
setnames(raw_data,
c("Name", "Partner", "Opponent 1", "Opponent 2", "Round", call.vars.old, score.vars.old),
c("name", "partner", "opp1", "opp2", "round", call.vars, score.vars))
raw_data2 <- raw_data[, c("name", "partner", "opp1", "opp2", "round", call.vars, score.vars), with=F] # Drop other cols
# Convert to long. Each row is a person-round-hand
data <- melt(raw_data2, id.vars=c("name", "partner", "opp1", "opp2", "round"),
measure.vars=patterns("call_", "score_"), variable.name="hand", value.name=c("call", "score"))
data[,`:=`(called=call=="v" | call=="x", lonertry=call=="x", call=NULL)] # Split out calls and loner calls
# Merge in opponent scores and calls
data[opp1=="Nat", opp1:="Natalie"] # Fix name inconsistency
data[opp2=="Nat", opp2:="Natalie"]
data2 <- merge(data, data[, list(opp1=name, round, hand, opp_score=score, opp1_called=called)],
by=c("opp1", "round", "hand"))
data3 <- merge(data2, data2[, list(opp2=name, round, hand, opp2_called=called)],
by=c("opp2", "round", "hand"))
data3[, opp_called:=opp1_called == TRUE | opp2_called==TRUE]
# Compute by-hand statistics
data3[, `:=`(weeuchred = score==2 & called==FALSE,
wegoteuchred = opp_score == 2 & opp_called==FALSE,
igoteuchred = opp_score == 2 & called == TRUE,
lonerwin = score == 4)]
# Aggregate by person
agg_data <- data3[, lapply(.SD, sum), by=name,
.SDcols=c("score", "opp_score", "called",
"weeuchred", "wegoteuchred", "igoteuchred",
"lonertry", "lonerwin")]
```
### Per-person statistics
```{r analysis1, echo=FALSE}
# Export agg_data tabulation
agg.labs <- c("Points for", "Points against", "Calls", "We euchred", "We got euchred", "I got euchred", "Loner tries", "Loner wins")
setorder(agg_data, name)
datatable(agg_data,
rownames=FALSE,
colnames=c("Name", agg.labs),
options=list(pageLength=nrow(agg_data)))
```
```{r weirdbug, echo=FALSE}
rm(.Random.seed) # Fixes a very weird bug related to datatable
set.seed(1)
```
### Distributions
```{r analysis2, echo=FALSE}
agg_data_long <- melt(agg_data, id="name")
agg_data_long[, variable:=factor(variable, # Generate nice labels
levels=agg.vars,
labels=agg.labs)]
ggplot(agg_data_long, aes(x=value)) + geom_histogram(bins=6) +
facet_wrap(~variable, ncol=2, scales="free_x") +
labs(x=NULL, y=NULL)
```
### Relationship between times called and total score
```{r analysis3, echo=FALSE}
ggplot(agg_data, aes(y=total_score)) +
geom_label_repel(aes(x=times_called, label=name)) +
geom_smooth(method=lm, aes(x=times_called)) +
labs(x="Times called", y="Total score")
```
View(agg_data)
agg.labs <- c("Points for", "Points against", "Calls", "We euchred", "We got euchred", "I got euchred", "Loner tries", "Loner wins")
setorder(agg_data, name)
datatable(agg_data,
rownames=FALSE,
colnames=c("Name", agg.labs),
options=list(pageLength=nrow(agg_data)))
agg.vars <- c("score", "opp_score", "called", "weeuchred",
"wegoteuchred", "igoteuchred", "lonertry", "lonerwin")
agg.labs <- c("Points for", "Points against", "Calls", "We euchred",
"We got euchred", "I got euchred", "Loner tries", "Loner wins")
agg_data <- data3[, lapply(.SD, sum), by=name,
.SDcols=agg.vars]
setorder(agg_data, name)
datatable(agg_data,
rownames=FALSE,
colnames=c("Name", agg.labs),
options=list(pageLength=nrow(agg_data)))
---
title: "East Van Euchre Club Analytics (December 3, 2017) - TESTING"
output:
html_document:
self_contained: no
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r load, echo=FALSE}
# Load and aggregate data
library(data.table)
library(ggplot2)
library(ggthemes)
library(ggrepel)
library(DT) # Sortable table
rm(list=ls())
# Load data
setwd("~/github/eastvaneuchre-analytics.github.io/")
raw_data <- fread("Euchre Analytics December 3rd @ Anza - MASTER DATA.csv")
# Rename variables to be lowercase, unspace
score.vars.old <- grep("Score: Hand [0-9]+", names(raw_data), value=T)
score.vars <- gsub("Score: Hand ([0-9]+)?", "score_\\1", score.vars.old)
call.vars.old <- grep("Called: Hand [0-9]+", names(raw_data), value=T)
call.vars <- gsub("Called: Hand ([0-9]+)?", "call_\\1", call.vars.old)
setnames(raw_data,
c("Name", "Partner", "Opponent 1", "Opponent 2", "Round", call.vars.old, score.vars.old),
c("name", "partner", "opp1", "opp2", "round", call.vars, score.vars))
raw_data2 <- raw_data[, c("name", "partner", "opp1", "opp2", "round", call.vars, score.vars), with=F] # Drop other cols
# Convert to long. Each row is a person-round-hand
data <- melt(raw_data2, id.vars=c("name", "partner", "opp1", "opp2", "round"),
measure.vars=patterns("call_", "score_"), variable.name="hand", value.name=c("call", "score"))
data[,`:=`(called=call=="v" | call=="x", lonertry=call=="x", call=NULL)] # Split out calls and loner calls
# Merge in opponent scores and calls
data[opp1=="Nat", opp1:="Natalie"] # Fix name inconsistency
data[opp2=="Nat", opp2:="Natalie"]
data2 <- merge(data, data[, list(opp1=name, round, hand, opp_score=score, opp1_called=called)],
by=c("opp1", "round", "hand"))
data3 <- merge(data2, data2[, list(opp2=name, round, hand, opp2_called=called)],
by=c("opp2", "round", "hand"))
data3[, opp_called:=opp1_called == TRUE | opp2_called==TRUE]
# Compute by-hand statistics
data3[, `:=`(weeuchred = score==2 & opp_called==TRUE,
wegoteuchred = opp_score == 2 & opp_called==FALSE,
igoteuchred = opp_score == 2 & called == TRUE,
lonerwin = score == 4)]
# Aggregate by person
agg.vars <- c("score", "opp_score", "called", "weeuchred",
"wegoteuchred", "igoteuchred", "lonertry", "lonerwin")
agg.labs <- c("Points for", "Points against", "Calls", "We euchred",
"We got euchred", "I got euchred", "Loner tries", "Loner wins")
agg_data <- data3[, lapply(.SD, sum), by=name,
.SDcols=agg.vars]
```
### Per-person statistics
```{r analysis1, echo=FALSE}
# Export agg_data tabulation
setorder(agg_data, name)
datatable(agg_data,
rownames=FALSE,
colnames=c("Name", agg.labs),
options=list(pageLength=nrow(agg_data)))
```
```{r weirdbug, echo=FALSE}
rm(.Random.seed) # Fixes a weird bug related to datatable
# set.seed(1)
```
### Distributions
```{r analysis2, echo=FALSE}
agg_data_long <- melt(agg_data, id="name")
agg_data_long[, variable:=factor(variable, # Generate nice labels
levels=agg.vars,
labels=agg.labs)]
ggplot(agg_data_long, aes(x=value)) + geom_histogram(bins=6) +
facet_wrap(~variable, ncol=2, scales="free_x") +
labs(x=NULL, y=NULL)
```
### Relationship between times called and total score
```{r analysis3, echo=FALSE}
ggplot(agg_data, aes(y=total_score)) +
geom_label_repel(aes(x=times_called, label=name)) +
geom_smooth(method=lm, aes(x=times_called)) +
labs(x="Times called", y="Total score")
```
View(agg_data)
agg_data_long <- melt(agg_data, id="name")
agg_data_long[, variable:=factor(variable, # Generate nice labels
levels=agg.vars,
labels=agg.labs)]
ggplot(agg_data_long, aes(x=value)) + geom_histogram(bins=6) +
facet_wrap(~variable, ncol=2, scales="free_x") +
labs(x=NULL, y=NULL)
ggplot(agg_data, aes(y=score)) +
geom_label_repel(aes(x=called, label=name)) +
geom_smooth(method=lm, aes(x=called)) +
labs(x="Times called", y="Total score")
agg_data_long <- melt(agg_data, id="name")
agg_data_long[, variable:=factor(variable, # Generate nice labels
levels=agg.vars,
labels=agg.labs)]
ggplot(agg_data_long, aes(x=value)) + geom_histogram(bins=6) +
facet_wrap(~variable, ncol=2, scales="free_x") +
labs(x=NULL, y=NULL)
unlink('analytics_cache', recursive = TRUE)
